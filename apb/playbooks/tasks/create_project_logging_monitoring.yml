---
# Create and configuration application project
- name: check if {{ project_name }} project exists
  command: "oc get project {{ project_name }}"
  register: project_result
  ignore_errors: true
- name: delete {{ project_name }} project
  command: >
      oc delete project {{ project_name }}
  when: project_result is succeeded
- name: create {{ project_name }} project
  command: >
      oc new-project {{ project_name }}
- name: grant {{ username }} to edit the project
  command: "oc adm policy add-role-to-user admin {{ username }} -n {{ project_name }}"
- name: grant applications in the the project to view Openshift API
  command: "oc policy add-role-to-user view -n {{ project_name }} -z default"
- name: grant applications with privileged access (for Istio)
  command: "oc adm policy add-scc-to-user privileged -z default -n {{ project_name }}"
- name: grant applications with anyuid access (for Istio)
  command: "oc adm policy add-scc-to-user anyuid -z default -n {{ project_name }}"
- name: update limit range
  shell: "echo {{ lookup('template', '{{ playbook_dir }}/templates/project-limits.yaml.j2')  | quote }} | oc replace -f -"
- name: deploy coolstore applications onto project
  shell: "{{ playbook_dir }}/templates/deploy-coolstore.sh {{ openshift_master_url }} {{ username }} {{ openshift_user_password }} {{ project_name }}"
  ignore_errors: true

# Create and configuration infra project
- name: check if {{ infra_project_name }} project exists
  command: "oc get project {{ infra_project_name }}"
  register: infra_project_result
  ignore_errors: true
- name: delete {{ infra_project_name }} project
  command: >
      oc delete project {{ infra_project_name }}
  when: infra_project_result is succeeded
- name: create {{ infra_project_name }} project
  command: >
      oc new-project {{ infra_project_name }}
- name: grant {{ username }} to edit the project {{ infra_project_name }}
  command: "oc adm policy add-role-to-user edit {{ username }} -n {{ infra_project_name }}"
- name: deploy promethous and grafana 
  shell: "{{ playbook_dir }}/templates/deploy-promethous.sh  {{ project_name }} {{ infra_project_name }}"
  ignore_errors: true

# Install local instance of Workshopper
- name: Deploy Workshopper
  command: >
      oc new-app quay.io/osevg/workshopper --name=guides-codeready
        -e WORKSHOPS_URLS={{ workshopper_workshop_urls }}
        -e CONTENT_URL_PREFIX={{ workshopper_content_url_prefix }}
        -n {{ infra_project_name }}
  vars:
    workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ git_repository_guide_path }}/{{ git_repository_guide_reference }}"
    workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ git_repository_guide_path }}/{{ git_repository_guide_reference }}/_openshift-logging-monitoring.yml"
  tags: guides
- name: Expose Route
  command: >
      oc expose svc/guides-codeready -n {{ infra_project_name }}
  tags: guides
- name: configure workshopper guide env vars
  command: >
      oc set env dc/guides-codeready -n {{ infra_project_name }}
        COOLSTORE_PROJECT="{{ project_name }}"
        INFRA_PROJECT="{{ infra_project_name }}"
        OPENSHIFT_CONSOLE_URL="{{ openshift_master_url }}"
        OPENSHIFT_USER="{{ username }}"
        OPENSHIFT_PASSWORD="{{ openshift_user_password }}"
        APPS_HOSTNAME_SUFFIX="{{ apps_hostname_suffix }}"
        LABS_GIT_REPO=https://github.com/{{ git_repository_lab_path }}.git#{{ git_repository_lab_reference }}
        LABS_DOWNLOAD_URL=https://github.com/{{ git_repository_lab_path }}/archive/{{ git_repository_lab_reference }}.zip
        WEB_NODEJS_GIT_REPO=https://github.com/{{ git_repository_lab_path }}/tree/{{ git_repository_lab_reference }}/web-nodejs
        CATALOG_GO_GIT_REPO=https://github.com/{{ git_repository_lab_path }}/tree/{{ git_repository_lab_reference }}/catalog-go
        CODEREADY_WORKSPACES_URL="http://codeready-{{ namespace }}.{{ apps_hostname_suffix }}"
        COOLSTORE_ROUTE_HOST="http://web-{{ project_name }}.{{ apps_hostname_suffix }}"
        GIT_URL=http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}
        NEXUS_URL=http://nexus-{{ namespace }}.{{ apps_hostname_suffix }}
        KIBANA_URL=https://kibana.{{ apps_hostname_suffix }}
        GRAFANA_ROUTE_HOST="http://grafana-ip-service-{{ infra_project_name }}.{{ apps_hostname_suffix }}"
        PROMETHEUS_ROUTE_HOST="http://prometheus-operated-{{ infra_project_name }}.{{ apps_hostname_suffix }}"
  tags: guides
